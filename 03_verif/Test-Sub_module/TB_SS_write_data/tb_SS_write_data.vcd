$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module tb_SS_write_data $end
   $var wire 32 4 SIZE_ADDR [31:0] $end
   $var wire 32 5 SIZE_DATA [31:0] $end
   $var wire 1 1 i_clk $end
   $var wire 1 # i_rst_n $end
   $var wire 1 $ i_start_write_data $end
   $var wire 1 % i_en_write_data $end
   $var wire 6 & i_si_ram [5:0] $end
   $var wire 6 ' i_ei_ram [5:0] $end
   $var wire 8 ( i_data_ram [7:0] $end
   $var wire 1 ) o_we_ram $end
   $var wire 6 * o_addr_ram [5:0] $end
   $var wire 8 + o_data_ram [7:0] $end
   $var wire 1 , o_done_write_data $end
   $scope module dut $end
    $var wire 32 4 SIZE_ADDR [31:0] $end
    $var wire 32 5 SIZE_DATA [31:0] $end
    $var wire 1 1 i_clk $end
    $var wire 1 # i_rst_n $end
    $var wire 1 $ i_start_write_data $end
    $var wire 1 % i_en_write_data $end
    $var wire 6 & i_si_ram [5:0] $end
    $var wire 6 ' i_ei_ram [5:0] $end
    $var wire 8 ( i_data_ram [7:0] $end
    $var wire 1 ) o_we_ram $end
    $var wire 6 * o_addr_ram [5:0] $end
    $var wire 8 + o_data_ram [7:0] $end
    $var wire 1 , o_done_write_data $end
    $var wire 1 - w_update_start $end
    $var wire 1 2 w_update_en $end
    $var wire 1 . w_update_en_start $end
    $var wire 1 3 w_compare_ei $end
    $var wire 6 / w_next_addr_ram [5:0] $end
    $scope module detect_edge_unit $end
     $var wire 1 1 i_clk $end
     $var wire 1 # i_rst_n $end
     $var wire 1 6 i_pos_edge $end
     $var wire 1 $ i_signal $end
     $var wire 1 - o_signal $end
     $var wire 1 0 w_p_signal $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
b000000 &
b000000 '
b00000000 (
0)
b000000 *
b00000000 +
0,
0-
0.
b000001 /
00
01
02
03
b00000000000000000000000000000110 4
b00000000000000000000000000001000 5
16
#5000
11
#10000
01
#15000
11
#20000
01
#25000
11
#30000
1#
01
#35000
11
#40000
01
#45000
1$
b000101 &
b001010 '
1-
10
11
#50000
01
#55000
0$
1%
b000101 *
0-
1.
b000110 /
00
11
12
#60000
01
#65000
b00000101 (
1)
b000110 *
b00000101 +
b000111 /
11
#70000
01
#75000
b00000110 (
b000111 *
b00000110 +
b001000 /
11
#80000
01
#85000
b00000111 (
b001000 *
b00000111 +
b001001 /
11
#90000
01
#95000
b00001000 (
b001001 *
b00001000 +
b001010 /
11
#100000
01
#105000
b00001001 (
b001010 *
b00001001 +
b001011 /
11
13
#110000
01
#115000
b00001010 (
b001011 *
b00001010 +
1,
b001100 /
11
03
#120000
01
#125000
b00001011 (
0)
b001100 *
b00001011 +
0,
0.
b001101 /
11
02
#130000
01
#135000
0%
11
#140000
01
#145000
11
#150000
01
#155000
11
#160000
01
#165000
11
#170000
01
#175000
11
#180000
01
#185000
1$
b000000 &
b000011 '
1-
10
11
#190000
01
#195000
0$
1%
b000000 *
0-
1.
b000001 /
00
11
12
#200000
01
#205000
b11000000 (
1)
b000001 *
b11000000 +
b000010 /
11
#210000
01
#215000
b11000001 (
b000010 *
b11000001 +
b000011 /
11
#220000
01
#225000
b11000010 (
b000011 *
b11000010 +
b000100 /
11
13
#230000
01
#235000
b11000011 (
b000100 *
b11000011 +
1,
b000101 /
11
03
#240000
01
#245000
b11000100 (
0)
b000101 *
b11000100 +
0,
0.
b000110 /
11
02
#250000
01
#255000
0%
11
#260000
01
#265000
11
#270000
01
#275000
11
#280000
01
#285000
11
#290000
01
#295000
11
#300000
01
#305000
1$
b001000 &
b001100 '
1-
10
11
#310000
01
#315000
0$
1%
b001000 *
0-
1.
b001001 /
00
11
12
#320000
01
#325000
1)
b001001 *
b001010 /
11
#330000
01
#335000
0%
b10101010 (
0)
b10101010 +
11
02
#340000
01
#345000
11
#350000
01
#355000
11
#360000
01
#365000
1%
1)
b001010 *
b001011 /
11
12
#370000
01
#375000
b10111011 (
b001011 *
b10111011 +
b001100 /
11
#380000
01
#385000
b001100 *
b001101 /
11
13
#390000
01
#395000
b001101 *
1,
b001110 /
11
03
#400000
01
#405000
0)
b001110 *
0,
0.
b001111 /
11
02
#410000
01
#415000
0%
11
#420000
01
#425000
11
#430000
01
#435000
11
#440000
01
#445000
11
#450000
01
#455000
11
#460000
01
#465000
11
