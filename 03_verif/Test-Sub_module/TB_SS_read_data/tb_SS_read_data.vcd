$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module tb_SS_read_data $end
   $var wire 32 6 SIZE_ADDR [31:0] $end
   $var wire 32 7 SIZE_DATA [31:0] $end
   $var wire 216 8 MEM_INIT_FILE [215:0] $end
   $var wire 1 / i_clk $end
   $var wire 1 # i_rst_n $end
   $var wire 1 $ i_start_read_data $end
   $var wire 1 % i_en_read_data $end
   $var wire 6 & i_si_ram [5:0] $end
   $var wire 6 ' i_ei_ram [5:0] $end
   $var wire 8 0 i_data_ram [7:0] $end
   $var wire 6 1 o_addr_ram [5:0] $end
   $var wire 8 2 o_data_ram [7:0] $end
   $var wire 1 ( o_data_valid $end
   $var wire 1 ) o_done_read_data $end
   $scope module BRAM_UNIT $end
    $var wire 32 7 DATA_WIDTH [31:0] $end
    $var wire 32 6 ADDR_WIDTH [31:0] $end
    $var wire 216 8 MEM_INIT_FILE [215:0] $end
    $var wire 1 / clk $end
    $var wire 1 # rst_n $end
    $var wire 1 ? we $end
    $var wire 8 @ data [7:0] $end
    $var wire 6 1 read_addr [5:0] $end
    $var wire 6 A write_addr [5:0] $end
    $var wire 8 0 q [7:0] $end
   $upscope $end
   $scope module DUT $end
    $var wire 32 6 SIZE_ADDR [31:0] $end
    $var wire 32 7 SIZE_DATA [31:0] $end
    $var wire 1 / i_clk $end
    $var wire 1 # i_rst_n $end
    $var wire 1 $ i_start_read_data $end
    $var wire 1 % i_en_read_data $end
    $var wire 6 & i_si_ram [5:0] $end
    $var wire 6 ' i_ei_ram [5:0] $end
    $var wire 8 0 i_data_ram [7:0] $end
    $var wire 6 1 o_addr_ram [5:0] $end
    $var wire 8 2 o_data_ram [7:0] $end
    $var wire 1 ( o_data_valid $end
    $var wire 1 ) o_done_read_data $end
    $var wire 1 * w_update_start $end
    $var wire 1 3 w_update_en $end
    $var wire 1 + w_update_en_start $end
    $var wire 1 , w_update_en_start_next $end
    $var wire 1 - w_update_en_done $end
    $var wire 1 4 w_compare_ei $end
    $var wire 6 5 w_next_addr_ram [5:0] $end
    $scope module detect_edge_unit $end
     $var wire 1 / i_clk $end
     $var wire 1 # i_rst_n $end
     $var wire 1 B i_pos_edge $end
     $var wire 1 $ i_signal $end
     $var wire 1 * o_signal $end
     $var wire 1 . w_p_signal $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
b000000 &
b000000 '
0(
0)
0*
0+
0,
0-
0.
0/
b00000000 0
b000000 1
b00000000 2
03
14
b000001 5
b00000000000000000000000000000110 6
b00000000000000000000000000001000 7
b001011100010111100101110001011100010111101001101010011110100010001010101010011000100010101011111010101000100001000101111011011010110010101101101010111110110100101101110011010010111010000101110011010000110010101111000 8
0?
b00000000 @
b000000 A
1B
#10000
1/
#20000
0/
#30000
1/
#40000
0/
#50000
1#
1-
1/
#60000
0/
#70000
1$
b000101 &
b001010 '
1)
1*
1+
0-
1.
1/
04
#80000
0/
#90000
0$
1%
1(
0)
0*
1,
0.
1/
b000101 1
13
b000110 5
#100000
0/
#110000
0%
0(
1/
03
#120000
0/
#130000
1/
#140000
0/
#150000
1/
#160000
0/
#170000
1/
#180000
0/
#190000
1/
#200000
0/
#210000
1$
b000000 &
b000011 '
1*
1.
1/
#220000
0/
#230000
0$
1%
1(
0*
0.
1/
b000000 1
13
b000001 5
#240000
0/
#250000
1/
b000001 1
b000010 5
#260000
0/
#270000
1/
b000010 1
b000011 5
#280000
0/
#290000
1/
b000011 1
14
b000100 5
#300000
0/
#310000
1-
1/
b000100 1
04
b000101 5
#320000
0/
#330000
1)
0+
0,
0-
1/
b000101 1
03
b000110 5
#340000
0/
#350000
0%
0(
0)
1/
#360000
0/
#370000
1/
#380000
0/
#390000
1/
#400000
0/
#410000
1/
#420000
0/
#430000
1/
#440000
0/
#450000
1$
b001000 &
b001100 '
1*
1+
1.
1/
#460000
0/
#470000
0$
1%
1(
0*
1,
0.
1/
b001000 1
13
b001001 5
#480000
0/
#490000
1/
b001001 1
b001010 5
#500000
0/
#510000
0%
0(
1/
03
#520000
0/
#530000
1/
#540000
0/
#550000
1/
#560000
0/
#570000
1%
1(
1/
b001010 1
13
b001011 5
#580000
0/
#590000
1/
b001011 1
b001100 5
#600000
0/
#610000
1/
b001100 1
14
b001101 5
#620000
0/
#630000
1-
1/
b001101 1
04
b001110 5
#640000
0/
#650000
1)
0+
0,
0-
1/
b001110 1
03
b001111 5
#660000
0/
#670000
0%
0(
0)
1/
#680000
0/
#690000
1/
#700000
0/
#710000
1/
#720000
0/
#730000
1/
#740000
0/
#750000
1/
#760000
0/
#770000
1/
